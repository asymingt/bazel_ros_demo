diff --git a/ament_index_cpp/src/get_search_paths.cpp b/ament_index_cpp/src/get_search_paths.cpp
index 7a411ac..1557c4b 100644
--- a/ament_index_cpp/src/get_search_paths.cpp
+++ b/ament_index_cpp/src/get_search_paths.cpp
@@ -17,7 +17,10 @@
 #include <sys/stat.h>
 
 #include <cstdlib>
+#include <filesystem>
+#include <iostream>
 #include <list>
+#include <optional>
 #include <sstream>
 #include <stdexcept>
 #include <string>
@@ -26,16 +29,15 @@
 #define stat _stat
 #endif
 
+#include <stdio.h>
+extern char **environ;
+
 namespace ament_index_cpp
 {
 
-std::list<std::string>
-get_search_paths()
-{
+// Try to get the value of an environment variable, and optionally return the result.
+std::optional<std::string> get_env_variable(const char * env_var) {
   char * ament_prefix_path = nullptr;
-  const char * env_var = "AMENT_PREFIX_PATH";
-
-  // get environment variable
 #ifndef _WIN32
   ament_prefix_path = getenv(env_var);
 #else
@@ -43,12 +45,30 @@ get_search_paths()
   _dupenv_s(&ament_prefix_path, &ament_prefix_path_size, env_var);
 #endif
   if (!ament_prefix_path || std::string(ament_prefix_path).empty()) {
+      return {};
+  }
+  return std::string(ament_prefix_path);
+}
+
+std::list<std::string>
+get_search_paths()
+{
+  // In a Bazel context AMENT_PREFIX_PATH should not be set. If this is the case, then
+  // we need to poke for a MANIFEST file, and use the current work directory as a
+  // stand-in search path for package data.
+  std::optional<std::string> ament_prefix_path = get_env_variable("AMENT_PREFIX_PATH");
+  if (!ament_prefix_path) {
+    const std::filesystem::path p1 = std::filesystem::current_path();
+    const std::filesystem::path p2 = "../MANIFEST";
+    if (std::filesystem::exists(p1 / p2)) {
+      return std::list<std::string>{p1};
+    }
     throw std::runtime_error("Environment variable 'AMENT_PREFIX_PATH' is not set or empty");
   }
 
   // split at token into separate paths
   std::list<std::string> paths;
-  std::stringstream ss(ament_prefix_path);
+  std::stringstream ss(*ament_prefix_path);
   std::string tok;
 #ifndef _WIN32
   char delim = ':';
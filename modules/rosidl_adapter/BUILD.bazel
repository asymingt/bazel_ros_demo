# Copyright 2025 Open Source Robotics Foundation, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@ros//python:defs.bzl", "py_pytest")
load("@rules_python//python:defs.bzl", "py_library", "py_binary")

# Export the aspect for converting ROS interfaces to IDLs.
exports_files(["defs.bzl"])

# This is the python library that does the bulk of the work for converting
# the .msg, .srv, .action files to the generic .idl representation.
py_library(
    name = "rosidl_adapter",
    srcs = glob(["rosidl_adapter/**/*.py"]),
    data = glob(["rosidl_adapter/**/*.em"]),
    deps = [
        "@ros//python:empy",
        "@ros//python:catkin-pkg",
        "@ros//python:pyyaml",
        "@rosidl_cli",
    ],
    visibility = ["//visibility:public"],
)

# This makes the setup script executable, and ensures that eny downstream
# consumers of this script bring in the correct dependencies.
[
    py_binary(
        name = script,
        srcs = ["scripts/{}.py".format(script)],
        deps = [":rosidl_adapter"],
        visibility = ["//visibility:public"],
    )
    for script in [
        "msg2idl",
        "srv2idl",
        "action2idl",
    ]
]

# All functional tests.
[
    py_pytest(
        name = test,
        srcs = ["test/parse_msg_files.py"] + ["test/{}.py".format(test)],
        python_version = "PY3",
        data = glob(["test/data/**"]),
        deps = [
            "@rules_python//python/runfiles",
            "@rosidl_cli",
            ":rosidl_adapter",
        ],
    )
    for test in [
       "test_base_type",
       "test_cli_extensions",
       "test_constant",
       "test_extract_message_comments",
       "test_field",
       "test_message_specification",
       "test_parse_action_string",
       "test_parse_message_file",
       "test_parse_message_string",
       "test_parse_primitive_value_string",
       "test_parse_service_string",
       "test_parse_unicode",
       "test_parse_value_string",
       "test_type",
       "test_valid_names",
       "test_validate_field_types",
    ]
]

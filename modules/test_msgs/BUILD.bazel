
# Copyright 2025 Open Source Robotics Foundation, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Imports

load("@ros//:defs.bzl", "ros_interface", "ros_package")
load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")
load("@rosidl_generator_c//:defs.bzl", "c_ros_library")
load("@rosidl_generator_cpp//:defs.bzl", "cc_ros_library")

# Interfaces

[
    ros_interface(
        name = "msg__{}".format(msg),
        src = "@test_interface_files//:msg/{}.msg".format(msg),
        visibility = ["//visibility:public"],
    )
    for msg in [
        "Arrays",
        "BasicTypes",
        "BoundedPlainSequences",
        "BoundedSequences",
        "Constants",
        "Defaults",
        "Empty",
        "MultiNested",
        "Nested",
        "Strings",
        "UnboundedSequences",
        "WStrings",
    ]
]

# Services

[
    ros_interface(
        name = "srv__{}".format(srv),
        src = "@test_interface_files//:srv/{}.srv".format(srv),
        visibility = ["//visibility:public"],
    )
    for srv in [
        "Arrays",
        "BasicTypes",
        "Empty",
    ]
]

# Actions

[
    ros_interface(
        name = "action__{}".format(action),
        src = "@test_interface_files//:action/{}.action".format(action),
        visibility = ["//visibility:public"],
    )
    for action in [
        "Fibonacci",
    ]
]

ros_interface(
    name = "msg__Builtins",
    src = "msg/Builtins.msg",
    visibility = ["//visibility:public"],
    deps = [
        "@builtin_interfaces//:msg__Duration",
        "@builtin_interfaces//:msg__Time",
    ],
)

ros_interface(
    name = "action__NestedMessage",
    src = "action/NestedMessage.action",
    visibility = ["//visibility:public"],
    deps = [
        ":msg__Builtins",
        "@builtin_interfaces//:msg__Time",
        "@test_msgs//:msg__BasicTypes",
    ],
)

# Targets

# cc_library(
#     name = "test_msgs_cc",
#     hdrs = glob(["src/**/*.hpp"])
#     visibility = ["//visibility:public"],
# )

# py_library(
#     name = "test_msgs_py",
#     srcs = glob(["src/test_msgs/**/*.py"]),
#     deps = [
#         "@ament_index_python",
#         "@rosidl_parser",
#         "@ros//python:numpy",
#         "@ros//python:pyyaml",
#     ],
#     visibility = ["//visibility:public"],
# )

# filegroup(
#   name = "test_msgs",
#   srcs = [
#     ":test_msgs_cc",
#     ":test_msgs_py",
#   ]
# )

# # Tests

c_ros_library(
    name = "test_action_typesupport_c_builds_msgs",
    deps = [
        "@test_msgs//:action__Fibonacci"
    ],
)

cc_test(
    name = "test_action_typesupport_c_builds",
    srcs = ["test/test_c_type_support.cpp"],
    cxxopts = [
        "-Wall",
        "-Wextra",
        "-Wpedantic",
        "-std=gnu++17",
    ],
    deps = [
        "@googletest//:gtest",
        "@googletest//:gtest_main",
        ":test_action_typesupport_c_builds_msgs",
    ],
    visibility = ["//visibility:public"],
)

cc_ros_library(
    name = "test_action_typesupport_cpp_builds_msgs",
    deps = [
        "@test_msgs//:action__Fibonacci"
    ],
)

cc_test(
    name = "test_action_typesupport_cpp_builds",
    srcs = ["test/test_cpp_type_support.cpp"],
    cxxopts = [
        "-Wall",
        "-Wextra",
        "-Wpedantic",
        "-std=gnu++17",
    ],
    deps = [
        "@googletest//:gtest",
        "@googletest//:gtest_main",
        ":test_action_typesupport_cpp_builds_msgs",
    ],
    visibility = ["//visibility:public"],
)


ros_package(
    name = "test_msgs",
    interfaces = [
        ":msg__Arrays",
        ":msg__BasicTypes",
        ":msg__BoundedPlainSequences",
        ":msg__BoundedSequences",
        ":msg__Constants",
        ":msg__Defaults",
        ":msg__Empty",
        ":msg__MultiNested",
        ":msg__Nested",
        ":msg__Strings",
        ":msg__UnboundedSequences",
        ":msg__WStrings",
        ":srv__Arrays",
        ":srv__BasicTypes",
        ":srv__Empty",
        ":action__Fibonacci"
    ],
    visibility = ["//visibility:public"],
)


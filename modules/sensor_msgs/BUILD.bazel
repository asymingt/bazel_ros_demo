
# Copyright 2025 Open Source Robotics Foundation, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Imports

load("@ros//:defs.bzl", "ros_interface", "ros_package")

# Interfaces

ros_interface(
    name = "msg__BatteryState",
    src = "msg/BatteryState.msg",
    visibility = ["//visibility:public"],
    deps = [
        "@std_msgs//:msg__Header",
    ],
)

ros_interface(
    name = "msg__CameraInfo",
    src = "msg/CameraInfo.msg",
    visibility = ["//visibility:public"],
    deps = [
        ":msg__RegionOfInterest",
        "@std_msgs//:msg__Header",
    ],
)

ros_interface(
    name = "msg__ChannelFloat32",
    src = "msg/ChannelFloat32.msg",
    visibility = ["//visibility:public"],
)

ros_interface(
    name = "msg__CompressedImage",
    src = "msg/CompressedImage.msg",
    visibility = ["//visibility:public"],
    deps = [
        "@std_msgs//:msg__Header",
    ],
)

ros_interface(
    name = "msg__FluidPressure",
    src = "msg/FluidPressure.msg",
    visibility = ["//visibility:public"],
    deps = [
        "@std_msgs//:msg__Header",
    ],
)

ros_interface(
    name = "msg__Illuminance",
    src = "msg/Illuminance.msg",
    visibility = ["//visibility:public"],
    deps = [
        "@std_msgs//:msg__Header",
    ],
)

ros_interface(
    name = "msg__Image",
    src = "msg/Image.msg",
    visibility = ["//visibility:public"],
    deps = [
        "@std_msgs//:msg__Header",
    ],
)

ros_interface(
    name = "msg__Imu",
    src = "msg/Imu.msg",
    visibility = ["//visibility:public"],
    deps = [
        "@geometry_msgs//:msg__Quaternion",
        "@geometry_msgs//:msg__Vector3",
        "@std_msgs//:msg__Header",
    ],
)

ros_interface(
    name = "msg__JointState",
    src = "msg/JointState.msg",
    visibility = ["//visibility:public"],
    deps = [
        "@std_msgs//:msg__Header",
    ],
)

ros_interface(
    name = "msg__Joy",
    src = "msg/Joy.msg",
    visibility = ["//visibility:public"],
    deps = [
        "@std_msgs//:msg__Header",
    ],
)

ros_interface(
    name = "msg__JoyFeedback",
    src = "msg/JoyFeedback.msg",
    visibility = ["//visibility:public"],
)

ros_interface(
    name = "msg__JoyFeedbackArray",
    src = "msg/JoyFeedbackArray.msg",
    visibility = ["//visibility:public"],
    deps = [
        ":msg__JoyFeedback",
    ],
)

ros_interface(
    name = "msg__LaserEcho",
    src = "msg/LaserEcho.msg",
    visibility = ["//visibility:public"],
)

ros_interface(
    name = "msg__LaserScan",
    src = "msg/LaserScan.msg",
    visibility = ["//visibility:public"],
    deps = [
        "@std_msgs//:msg__Header",
    ],
)

ros_interface(
    name = "msg__MagneticField",
    src = "msg/MagneticField.msg",
    visibility = ["//visibility:public"],
    deps = [
        "@geometry_msgs//:msg__Vector3",
        "@std_msgs//:msg__Header",
    ],
)

ros_interface(
    name = "msg__MultiDOFJointState",
    src = "msg/MultiDOFJointState.msg",
    visibility = ["//visibility:public"],
    deps = [
        "@geometry_msgs//:msg__Transform",
        "@geometry_msgs//:msg__Twist",
        "@geometry_msgs//:msg__Wrench",
        "@std_msgs//:msg__Header",
    ],
)

ros_interface(
    name = "msg__MultiEchoLaserScan",
    src = "msg/MultiEchoLaserScan.msg",
    visibility = ["//visibility:public"],
    deps = [
        ":msg__LaserEcho",
        "@std_msgs//:msg__Header",
    ],
)

ros_interface(
    name = "msg__NavSatFix",
    src = "msg/NavSatFix.msg",
    visibility = ["//visibility:public"],
    deps = [
        ":msg__NavSatStatus",
        "@std_msgs//:msg__Header",
    ],
)

ros_interface(
    name = "msg__NavSatStatus",
    src = "msg/NavSatStatus.msg",
    visibility = ["//visibility:public"],
)

ros_interface(
    name = "msg__PointCloud",
    src = "msg/PointCloud.msg",
    visibility = ["//visibility:public"],
    deps = [
        ":msg__ChannelFloat32",
        "@geometry_msgs//:msg__Point32",
        "@std_msgs//:msg__Header",
    ],
)

ros_interface(
    name = "msg__PointCloud2",
    src = "msg/PointCloud2.msg",
    visibility = ["//visibility:public"],
    deps = [
        ":msg__PointField",
        "@std_msgs//:msg__Header",
    ],
)

ros_interface(
    name = "msg__PointField",
    src = "msg/PointField.msg",
    visibility = ["//visibility:public"],
)

ros_interface(
    name = "msg__Range",
    src = "msg/Range.msg",
    visibility = ["//visibility:public"],
    deps = [
        "@std_msgs//:msg__Header",
    ],
)

ros_interface(
    name = "msg__RegionOfInterest",
    src = "msg/RegionOfInterest.msg",
    visibility = ["//visibility:public"],
)

ros_interface(
    name = "msg__RelativeHumidity",
    src = "msg/RelativeHumidity.msg",
    visibility = ["//visibility:public"],
    deps = [
        "@std_msgs//:msg__Header",
    ],
)

ros_interface(
    name = "srv__SetCameraInfo",
    src = "srv/SetCameraInfo.srv",
    visibility = ["//visibility:public"],
    deps = [
        "@sensor_msgs//:msg__CameraInfo",
    ],
)

ros_interface(
    name = "msg__Temperature",
    src = "msg/Temperature.msg",
    visibility = ["//visibility:public"],
    deps = [
        "@std_msgs//:msg__Header",
    ],
)

ros_interface(
    name = "msg__TimeReference",
    src = "msg/TimeReference.msg",
    visibility = ["//visibility:public"],
    deps = [
        "@builtin_interfaces//:msg__Time",
        "@std_msgs//:msg__Header",
    ],
)

# ROS C/C++ tests

# ros_cc_test(
#     name = "test_sensor_msgs",
#     visibility = ["//visibility:public"],
#     srcs = [
#         "test/test_image_encodings.cpp",
#         "test/test_pointcloud_conversion.cpp",
#         "test/test_pointcloud_iterator.cpp",
#     ],
#     cxxopts = [
#         "-Wall",
#         "-Wextra",
#         "-Wpedantic",
#         "-std=gnu++17",
#     ],
#     defines = [
#         "RCUTILS_ENABLE_FAULT_INJECTION",
#         "ROS_PACKAGE_NAME=sensor_msgs",
#     ],
#     linkopts = [
#         "-ldl",
#         "-pthread",
#     ],
#     deps = [
#         "@builtin_interfaces",
#         "@geometry_msgs",
#         "@googletest//:gtest",
#         "@googletest//:gtest_main",
#         "@rcutils",
#         "@rosidl_runtime_c",
#         "@rosidl_runtime_cpp",
#         "@service_msgs",
#         "@std_msgs",
#     ],
# )

# Package

ros_package(
    name = "sensor_msgs",
    interfaces = [
        ":msg__BatteryState",
        ":msg__CameraInfo",
        ":msg__ChannelFloat32",
        ":msg__CompressedImage",
        ":msg__FluidPressure",
        ":msg__Illuminance",
        ":msg__Image",
        ":msg__Imu",
        ":msg__JointState",
        ":msg__Joy",
        ":msg__JoyFeedback",
        ":msg__JoyFeedbackArray",
        ":msg__LaserEcho",
        ":msg__LaserScan",
        ":msg__MagneticField",
        ":msg__MultiDOFJointState",
        ":msg__MultiEchoLaserScan",
        ":msg__NavSatFix",
        ":msg__NavSatStatus",
        ":msg__PointCloud",
        ":msg__PointCloud2",
        ":msg__PointField",
        ":msg__Range",
        ":msg__RegionOfInterest",
        ":msg__RelativeHumidity",
        ":msg__Temperature",
        ":msg__TimeReference",
        ":srv__SetCameraInfo",
    ],
    tests = [
        "test_sensor_msgs",
    ],
)

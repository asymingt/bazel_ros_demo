
# Copyright 2025 Open Source Robotics Foundation, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Imports

load("@ros//:defs.bzl", "ros_cc_library", "ros_cc_test", "ros_package")

# ROS C/C++ libraries

ros_cc_library(
    name = "rmw_fastrtps_cpp",
    visibility = ["//visibility:public"],
    srcs = [
        "src/get_client.cpp",
        "src/get_participant.cpp",
        "src/get_publisher.cpp",
        "src/get_service.cpp",
        "src/get_subscriber.cpp",
        "src/identifier.cpp",
        "src/init_rmw_context_impl.cpp",
        "src/publisher.cpp",
        "src/rmw_client.cpp",
        "src/rmw_compare_gids_equal.cpp",
        "src/rmw_count.cpp",
        "src/rmw_dynamic_message_type_support.cpp",
        "src/rmw_event.cpp",
        "src/rmw_features.cpp",
        "src/rmw_get_endpoint_network_flow.cpp",
        "src/rmw_get_gid_for_client.cpp",
        "src/rmw_get_gid_for_publisher.cpp",
        "src/rmw_get_implementation_identifier.cpp",
        "src/rmw_get_serialization_format.cpp",
        "src/rmw_get_topic_endpoint_info.cpp",
        "src/rmw_guard_condition.cpp",
        "src/rmw_init.cpp",
        "src/rmw_logging.cpp",
        "src/rmw_node.cpp",
        "src/rmw_node_info_and_types.cpp",
        "src/rmw_node_names.cpp",
        "src/rmw_publish.cpp",
        "src/rmw_publisher.cpp",
        "src/rmw_qos.cpp",
        "src/rmw_request.cpp",
        "src/rmw_response.cpp",
        "src/rmw_serialize.cpp",
        "src/rmw_service.cpp",
        "src/rmw_service_names_and_types.cpp",
        "src/rmw_service_server_is_available.cpp",
        "src/rmw_subscription.cpp",
        "src/rmw_take.cpp",
        "src/rmw_topic_names_and_types.cpp",
        "src/rmw_trigger_guard_condition.cpp",
        "src/rmw_wait.cpp",
        "src/rmw_wait_set.cpp",
        "src/serialization_format.cpp",
        "src/subscription.cpp",
        "src/type_support_common.cpp",
    ],
    includes = [
        "include",
    ],
    cxxopts = [
        "-Wall",
        "-Wextra",
        "-Wpedantic",
        "-fPIC",
        "-fvisibility-inlines-hidden",
        "-fvisibility=hidden",
        "-std=gnu++17",
    ],
    defines = [
        "FASTCDR_DYN_LINK",
        "FASTDDS_DYN_LINK",
        "FOONATHAN_MEMORY=1",
        "FOONATHAN_MEMORY_VERSION_MAJOR=0",
        "FOONATHAN_MEMORY_VERSION_MINOR=7",
        "FOONATHAN_MEMORY_VERSION_PATCH=3",
        "RCUTILS_ENABLE_FAULT_INJECTION",
        "RMW_FASTRTPS_CPP_BUILDING_LIBRARY",
        "ROS_PACKAGE_NAME=rmw_fastrtps_cpp",
        "TINYXML2_IMPORT",
        "_FILE_OFFSET_BITS=64",
        "rmw_fastrtps_cpp_EXPORTS",
    ],
    linkopts = [
        "-ldl",
        "-lpthread",
        "-lrt",
        "-rdynamic",
    ],
    deps = [
        "@fastcdr",
        "@fastdds",
        "@foonathan_memory",
        "@llttng-ust",
        "@openssl",
        "@rcpputils",
        "@rcutils",
        "@rmw",
        "@rmw_dds_common",
        "@rmw_fastrtps_shared_cpp",
        "@rmw_security_common",
        "@rosidl_runtime_c",
        "@rosidl_runtime_cpp",
        "@tinyxml2",
        "@tracetools",
    ],
)

# ROS C/C++ tests

ros_cc_test(
    name = "test_get_native_entities",
    visibility = ["//visibility:public"],
    srcs = [
        "test/test_get_native_entities.cpp",
    ],
    cxxopts = [
        "-Wall",
        "-Wextra",
        "-Wpedantic",
        "-std=gnu++17",
    ],
    defines = [
        "FASTCDR_DYN_LINK",
        "FASTDDS_DYN_LINK",
        "FOONATHAN_MEMORY=1",
        "FOONATHAN_MEMORY_VERSION_MAJOR=0",
        "FOONATHAN_MEMORY_VERSION_MINOR=7",
        "FOONATHAN_MEMORY_VERSION_PATCH=3",
        "RCUTILS_ENABLE_FAULT_INJECTION",
        "ROS_PACKAGE_NAME=rmw_fastrtps_cpp",
        "TINYXML2_IMPORT",
        "_FILE_OFFSET_BITS=64",
    ],
    linkopts = [
        "-ldl",
        "-lpthread",
        "-lrt",
        "-pthread",
    ],
    deps = [
        ":rmw_fastrtps_cpp",
        "@action_msgs",
        "@builtin_interfaces",
        "@fastcdr",
        "@fastdds",
        "@foonathan_memory",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
        "@openssl",
        "@osrf_testing_tools_cpp",
        "@osrf_testing_tools_cpp//:memory_tools",
        "@rcpputils",
        "@rcutils",
        "@rmw",
        "@rmw_dds_common",
        "@rmw_fastrtps_shared_cpp",
        "@rmw_security_common",
        "@rosidl_runtime_c",
        "@rosidl_runtime_cpp",
        "@service_msgs",
        "@test_msgs",
        "@tinyxml2",
        "@unique_identifier_msgs",
    ],
)

ros_cc_test(
    name = "test_logging",
    visibility = ["//visibility:public"],
    srcs = [
        "test/test_logging.cpp",
    ],
    cxxopts = [
        "-Wall",
        "-Wextra",
        "-Wpedantic",
        "-std=gnu++17",
    ],
    defines = [
        "FASTCDR_DYN_LINK",
        "FASTDDS_DYN_LINK",
        "FOONATHAN_MEMORY=1",
        "FOONATHAN_MEMORY_VERSION_MAJOR=0",
        "FOONATHAN_MEMORY_VERSION_MINOR=7",
        "FOONATHAN_MEMORY_VERSION_PATCH=3",
        "RCUTILS_ENABLE_FAULT_INJECTION",
        "ROS_PACKAGE_NAME=rmw_fastrtps_cpp",
        "TINYXML2_IMPORT",
        "_FILE_OFFSET_BITS=64",
    ],
    linkopts = [
        "-ldl",
        "-lpthread",
        "-lrt",
        "-pthread",
    ],
    deps = [
        ":rmw_fastrtps_cpp",
        "@fastcdr",
        "@fastdds",
        "@foonathan_memory",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
        "@openssl",
        "@rcpputils",
        "@rcutils",
        "@rmw",
        "@rmw_dds_common",
        "@rmw_fastrtps_shared_cpp",
        "@rmw_security_common",
        "@rosidl_runtime_c",
        "@rosidl_runtime_cpp",
        "@tinyxml2",
    ],
)

# Package

ros_package(
    name = "rmw_fastrtps_cpp",
    libraries = [
        "rmw_fastrtps_cpp",
    ],
    tests = [
        "test_get_native_entities",
        "test_logging",
    ],
)
